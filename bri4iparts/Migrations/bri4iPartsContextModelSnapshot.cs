// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bri4iparts.Data;

#nullable disable

namespace bri4iparts.Migrations
{
    [DbContext(typeof(bri4iPartsContext))]
    partial class bri4iPartsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("bri4iparts.Data.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "41d18d4b-8234-46f3-99e5-8f8a59e49c34",
                            Address = "Varna, Bulgaria",
                            ConcurrencyStamp = "5dd9f617-acac-4a54-b89d-f0a49c84df24",
                            Email = "user@gmail.com",
                            FirstName = "Default",
                            LastName = "User",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 42, DateTimeKind.Local).AddTicks(1884),
                            NormalizedEmail = "USER@GMAIL.COM",
                            NormalizedUserName = "USER@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDR9G+s28XG5moo8a/IrN/zqBFI8gB9gHwjO8tD4eTIKaVfqtsjE4BOFy5NAPel21A==",
                            PhoneNumber = "0876564320",
                            UserName = "user@gmail.com"
                        },
                        new
                        {
                            Id = "5f398b2d-0efb-488d-aab7-a85a52f86a8a",
                            Address = "Sofia, Bulgaria",
                            ConcurrencyStamp = "2ae5e412-2e0b-476a-87ac-3df84ab18aec",
                            Email = "ADMIN@gmail.com",
                            FirstName = "Admin",
                            LastName = "User",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 42, DateTimeKind.Local).AddTicks(1893),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKngcAGKfsb/6o5lrhWCa2ohoNEniI2IQY/vYkk7OO3TUu9dFQvNCNibW/0pW5kNKQ==",
                            PhoneNumber = "0878000012",
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "bb76e669-683a-46c8-b476-b612454880f9",
                            Address = "Pleven, Bulgaria",
                            ConcurrencyStamp = "5907ab1e-15b7-4b1a-a2b6-d548057e0c68",
                            Email = "superuser@gmail.com",
                            FirstName = "Super",
                            LastName = "User",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 42, DateTimeKind.Local).AddTicks(1901),
                            NormalizedEmail = "SUPERUSER@GMAIL.COM",
                            NormalizedUserName = "SUPERUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIUD4cA1MJN1pkLrRZuqIuyefwL0Fp5s84VNX24E1S7B11iyWtcl6/hko9hrsYmMRA==",
                            PhoneNumber = "0878123413",
                            UserName = "superuser@gmail.com"
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("logs_18118039", (string)null);
                });

            modelBuilder.Entity("bri4iparts.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ShipmentAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductSubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModificationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductManufacturerId");

                    b.HasIndex("ProductSubCategoryId");

                    b.HasIndex("VehicleModificationId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "накладки",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3293),
                            Name = "Накладки Valeo",
                            PictureUrl = "valeobrakes.png",
                            Price = 45m,
                            ProductManufacturerId = 3,
                            ProductSubCategoryId = 1,
                            UnitsInStock = 10,
                            VehicleModificationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "моторно масло 0w30",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3296),
                            Name = "Моторно масло Bosch 0w30",
                            PictureUrl = "boschoil.png",
                            Price = 75m,
                            ProductManufacturerId = 4,
                            ProductSubCategoryId = 7,
                            UnitsInStock = 10,
                            VehicleModificationId = 4
                        },
                        new
                        {
                            Id = 3,
                            Description = "Bosch пистов ремък",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3299),
                            Name = "Пистов ремък Bosch",
                            PictureUrl = "boschbelt.png",
                            Price = 15m,
                            ProductManufacturerId = 4,
                            ProductSubCategoryId = 12,
                            UnitsInStock = 10,
                            VehicleModificationId = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "Съединител Valeo",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3301),
                            Name = "Съединител Valeo",
                            PictureUrl = "valeocoupler.jpg",
                            Price = 255m,
                            ProductManufacturerId = 3,
                            ProductSubCategoryId = 10,
                            UnitsInStock = 20,
                            VehicleModificationId = 5
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3216),
                            Name = "Спирачна система",
                            PictureUrl = "brakesystem.png"
                        },
                        new
                        {
                            Id = 2,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3219),
                            Name = "Части за двигател",
                            PictureUrl = "engineparts.png"
                        },
                        new
                        {
                            Id = 3,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3221),
                            Name = "Масла и течности",
                            PictureUrl = "oil.png"
                        },
                        new
                        {
                            Id = 4,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3222),
                            Name = "Трансмисия",
                            PictureUrl = "transmission.png"
                        },
                        new
                        {
                            Id = 5,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3224),
                            Name = "Ремъчно задвижване",
                            PictureUrl = "belt.png"
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.ProductManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("ProductManufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3274),
                            Name = "Ridex",
                            PictureUrl = "ridex.png"
                        },
                        new
                        {
                            Id = 2,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3276),
                            Name = "Febi Bilstein",
                            PictureUrl = "febibilstein.png"
                        },
                        new
                        {
                            Id = 3,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3278),
                            Name = "VALEO",
                            PictureUrl = "valeo.png"
                        },
                        new
                        {
                            Id = 4,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3280),
                            Name = "Bosch",
                            PictureUrl = "bosch.png"
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.ProductSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductSubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3236),
                            Name = "Накладки",
                            PictureUrl = "brakes.png",
                            ProductCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3239),
                            Name = "Спирачни дискове",
                            PictureUrl = "brakedisks.png",
                            ProductCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3241),
                            Name = "Спирачни апарати",
                            PictureUrl = "brakeaparats.png",
                            ProductCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3243),
                            Name = "Клапани",
                            PictureUrl = "valves.png",
                            ProductCategoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3245),
                            Name = "Разпределителен вал",
                            PictureUrl = "camshaft.png",
                            ProductCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3247),
                            Name = "Повдигачи",
                            PictureUrl = "lifters.png",
                            ProductCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3249),
                            Name = "Моторно масло",
                            PictureUrl = "motoroil.png",
                            ProductCategoryId = 3
                        },
                        new
                        {
                            Id = 8,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3251),
                            Name = "Трансмисионно масло",
                            PictureUrl = "transmissionoil.png",
                            ProductCategoryId = 3
                        },
                        new
                        {
                            Id = 9,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3253),
                            Name = "Антифриз",
                            PictureUrl = "antifreeze.png",
                            ProductCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3255),
                            Name = "Съединител",
                            PictureUrl = "coupler.png",
                            ProductCategoryId = 4
                        },
                        new
                        {
                            Id = 11,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3257),
                            Name = "Притискателен диск",
                            PictureUrl = "couplerdisk.png",
                            ProductCategoryId = 4
                        },
                        new
                        {
                            Id = 12,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3259),
                            Name = "Пистов ремък",
                            PictureUrl = "trackbelt.png",
                            ProductCategoryId = 5
                        },
                        new
                        {
                            Id = 13,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3261),
                            Name = "Комплект ангренажен ремък",
                            PictureUrl = "timebelt.png",
                            ProductCategoryId = 5
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("VehicleCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleCategoryId");

                    b.ToTable("VehicleBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedOn_18118039 = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Audi",
                            PictureUrl = "audilogo.png",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            ModifiedOn_18118039 = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mercedes",
                            PictureUrl = "mercedeslogo.png",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            ModifiedOn_18118039 = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Toyota",
                            PictureUrl = "toyotalogo.png",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            ModifiedOn_18118039 = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Skoda",
                            PictureUrl = "skodalogo.png",
                            VehicleCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            ModifiedOn_18118039 = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MAN",
                            PictureUrl = "manlogo.png",
                            VehicleCategoryId = 2
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleBrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleBrandId");

                    b.ToTable("VehicleBrandModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3200),
                            Name = "Audi A3",
                            PictureUrl = "audia3.png",
                            VehicleBrandId = 1
                        },
                        new
                        {
                            Id = 2,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3203),
                            Name = "Mercedes S-Class",
                            PictureUrl = "mercedessclass.png",
                            VehicleBrandId = 2
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("VehicleCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(2936),
                            Name = "Car"
                        },
                        new
                        {
                            Id = 2,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(2971),
                            Name = "Truck"
                        },
                        new
                        {
                            Id = 3,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(2973),
                            Name = "Motorcycle"
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleBrandModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YearOfEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("YearOfRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("VehicleBrandId");

                    b.HasIndex("VehicleBrandModelId");

                    b.ToTable("VehicleModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3144),
                            Name = "Audi A3 8L1",
                            PictureUrl = "audia38l.png",
                            VehicleBrandId = 1,
                            VehicleBrandModelId = 1,
                            YearOfEnd = new DateTime(2006, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1996, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3147),
                            Name = "Audi A3 8P1",
                            PictureUrl = "audia38p.png",
                            VehicleBrandId = 1,
                            VehicleBrandModelId = 1,
                            YearOfEnd = new DateTime(2013, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(2003, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3149),
                            Name = "Audi A3 Cabrio",
                            PictureUrl = "audicabrio.png",
                            VehicleBrandId = 1,
                            VehicleBrandModelId = 1,
                            YearOfEnd = new DateTime(2013, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(2008, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3151),
                            Name = "Mercedes S-class Saloon W220",
                            PictureUrl = "mercedesw220.png",
                            VehicleBrandId = 2,
                            VehicleBrandModelId = 2,
                            YearOfEnd = new DateTime(2005, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1998, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3154),
                            Name = "Mercedes S-class Saloon W124",
                            PictureUrl = "mercedesw124.png",
                            VehicleBrandId = 2,
                            VehicleBrandModelId = 2,
                            YearOfEnd = new DateTime(1993, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1984, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleModification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cubature")
                        .HasColumnType("int");

                    b.Property<string>("EngineCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<int>("Kilowats")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("YearOfEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("YearOfRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("VehicleModelId");

                    b.ToTable("VehicleModifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cubature = 1600,
                            EngineCode = "AEH",
                            FuelType = "Gasoline",
                            HorsePower = 101,
                            Kilowats = 74,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3094),
                            VehicleModelId = 1,
                            YearOfEnd = new DateTime(2003, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1996, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Cubature = 1600,
                            EngineCode = "AVU",
                            FuelType = "Gasoline",
                            HorsePower = 102,
                            Kilowats = 75,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3098),
                            VehicleModelId = 1,
                            YearOfEnd = new DateTime(2003, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(2000, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Cubature = 1800,
                            EngineCode = "AGN",
                            FuelType = "Gasoline",
                            HorsePower = 125,
                            Kilowats = 92,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3100),
                            VehicleModelId = 1,
                            YearOfEnd = new DateTime(2003, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1996, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Cubature = 1900,
                            EngineCode = "AGR",
                            FuelType = "Diesel",
                            HorsePower = 90,
                            Kilowats = 66,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3103),
                            VehicleModelId = 1,
                            YearOfEnd = new DateTime(2001, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1996, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Cubature = 1900,
                            EngineCode = "AHF",
                            FuelType = "Diesel",
                            HorsePower = 110,
                            Kilowats = 81,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3105),
                            VehicleModelId = 1,
                            YearOfEnd = new DateTime(2001, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1997, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Cubature = 2800,
                            EngineCode = "M112.922",
                            FuelType = "Gasoline",
                            HorsePower = 204,
                            Kilowats = 150,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3108),
                            VehicleModelId = 4,
                            YearOfEnd = new DateTime(2005, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1998, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Cubature = 3200,
                            EngineCode = "OM613.960",
                            FuelType = "Diesel",
                            HorsePower = 197,
                            Kilowats = 145,
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(3110),
                            VehicleModelId = 4,
                            YearOfEnd = new DateTime(2002, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearOfRelease = new DateTime(1999, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUserRole<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("bri4iparts.Data.Models.AppIdentityRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("AppIdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "Admin",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(7771)
                        },
                        new
                        {
                            Id = "2",
                            Name = "User",
                            NormalizedName = "User",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(7788)
                        },
                        new
                        {
                            Id = "3",
                            Name = "SuperUser",
                            NormalizedName = "SuperUser",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 41, DateTimeKind.Local).AddTicks(7795)
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.AppIdentityUserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>");

                    b.Property<DateTime>("ModifiedOn_18118039")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("AppIdentityUserRole");

                    b.HasData(
                        new
                        {
                            UserId = "5f398b2d-0efb-488d-aab7-a85a52f86a8a",
                            RoleId = "1",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 42, DateTimeKind.Local).AddTicks(1796)
                        },
                        new
                        {
                            UserId = "41d18d4b-8234-46f3-99e5-8f8a59e49c34",
                            RoleId = "2",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 42, DateTimeKind.Local).AddTicks(1808)
                        },
                        new
                        {
                            UserId = "bb76e669-683a-46c8-b476-b612454880f9",
                            RoleId = "3",
                            ModifiedOn_18118039 = new DateTime(2022, 6, 17, 14, 18, 34, 42, DateTimeKind.Local).AddTicks(1810)
                        });
                });

            modelBuilder.Entity("bri4iparts.Data.Models.Order", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bri4iparts.Data.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.Product", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.ProductCategory", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("bri4iparts.Data.Models.ProductManufacturer", "ProductManufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ProductManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bri4iparts.Data.Models.ProductSubCategory", "ProductSubCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bri4iparts.Data.Models.VehicleModification", "VehicleModification")
                        .WithMany("Products")
                        .HasForeignKey("VehicleModificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductManufacturer");

                    b.Navigation("ProductSubCategory");

                    b.Navigation("VehicleModification");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.ProductSubCategory", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.ProductCategory", "ProductCategory")
                        .WithMany("ProductSubCategories")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleBrand", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.VehicleCategory", "VehicleCategory")
                        .WithMany("VehicleBrands")
                        .HasForeignKey("VehicleCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleCategory");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleBrandModel", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.VehicleBrand", "VehicleBrand")
                        .WithMany("VehicleBrandModels")
                        .HasForeignKey("VehicleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleBrand");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleModel", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.VehicleBrand", "VehicleBrand")
                        .WithMany("VehicleModels")
                        .HasForeignKey("VehicleBrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("bri4iparts.Data.Models.VehicleBrandModel", "VehicleBrandModel")
                        .WithMany("VehicleModels")
                        .HasForeignKey("VehicleBrandModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleBrand");

                    b.Navigation("VehicleBrandModel");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleModification", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.VehicleModel", "VehicleModel")
                        .WithMany("VehicleModifications")
                        .HasForeignKey("VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bri4iparts.Data.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("bri4iparts.Data.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bri4iparts.Data.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.ProductCategory", b =>
                {
                    b.Navigation("ProductSubCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.ProductManufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.ProductSubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleBrand", b =>
                {
                    b.Navigation("VehicleBrandModels");

                    b.Navigation("VehicleModels");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleBrandModel", b =>
                {
                    b.Navigation("VehicleModels");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleCategory", b =>
                {
                    b.Navigation("VehicleBrands");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleModel", b =>
                {
                    b.Navigation("VehicleModifications");
                });

            modelBuilder.Entity("bri4iparts.Data.Models.VehicleModification", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
